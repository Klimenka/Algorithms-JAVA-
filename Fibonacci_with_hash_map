import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;

public class Main {
    int cnt;
    Map<Integer, BigInteger> cache = new HashMap<>();
    private BigInteger fibonacci(int n){
        cnt++;
        if(n<2){
            return BigInteger.valueOf(n);
        }
        if(cache.containsKey(n)){
            return cache.get(n);
        }
        else {
            for(int i = 2; i <= n; i++){
                BigInteger res = fibonacci(i-1).add(fibonacci(i-2));
                cache.put(i, res);
            }
            return cache.get(n);
        }
    }
    private void run(int n){
        System.out.println(n + ": "+ fibonacci(n));
        System.out.println(cnt + " calls");
    }
    public static void main(String[] args) {

            long startTime = System.currentTimeMillis();
            new Main().run(100000);
            long finishTime = System.currentTimeMillis();
            System.out.println(finishTime - startTime + "ms");

    }
}
